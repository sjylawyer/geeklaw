<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.012368.xyz</id>
    <title>废名</title>
    <updated>2020-02-24T06:13:27.122Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://www.012368.xyz"/>
    <link rel="self" href="https://www.012368.xyz/atom.xml"/>
    <subtitle>万物皆有裂痕</subtitle>
    <logo>https://www.012368.xyz/images/avatar.png</logo>
    <icon>https://www.012368.xyz/favicon.ico</icon>
    <rights>All rights reserved 2020, 废名</rights>
    <entry>
        <title type="html"><![CDATA[用docker搭建nextcloud和aria2]]></title>
        <id>https://www.012368.xyz/qXk6tAlLG/</id>
        <link href="https://www.012368.xyz/qXk6tAlLG/">
        </link>
        <updated>2020-02-23T02:21:17.000Z</updated>
        <content type="html"><![CDATA[<pre><code>git clone https://github.com/wahyd4/aria2-ariang-x-docker-compose.git
cd aria2-ariang-x-docker-compose/nextcloud
</code></pre>
<p>注：因此此次是为了安装nextcloud和aria2 因此进入nextcloud目录[^docker-compose]</p>
<figure data-type="image" tabindex="1"><img src="https://raw.githubusercontent.com/sjylawyer/pic_backup/master/img/20200223101034.png" alt="" loading="lazy"></figure>
<p>编译<code>docker-compose.yml</code>，文件主要是变更了端口还有添加了本地的映射文件。</p>
<pre><code>version: '3.5'

services:
  nextcloud:
    image: nextcloud:latest
    volumes:
      - G:/hyper/nextcloud/data:/var/www/html:rw # 修改了映射的目录
      - D:/MyDownload:/data:rw # 修改了映射的目录
    restart: always
  aria2:
    image: wahyd4/aria2-ui:nextcloud
    ports:
      - &quot;8000:80&quot;
      - &quot;443:443&quot;
    volumes:
      - D:/MyDownload:/data # 修改了映射的目录
    # volumes:
      # - /app/a.db:/app/filebrowser.db
      # - /yoursslkeys/:/app/conf/key
      # - &lt;the folder of aria2.conf and aria2.session&gt;:/app/conf
    environment:
      - DOMAIN=:80 #domain, for https just bind domain like this https://example.com
      # - PUID=1000 # bind custom linux user id
      # - PGID=1000 # bind custom linux group id
      # - ENABLE_AUTH=true # enable authentication for aria2
      # - RPC_SECRET=Hello # aria2 rpc secret
      # - ARIA2_SSL=false
      # - ARIA2_USER=user # aria2 login user
      # - ARIA2_PWD=pwd  # aria2 login password
    links:
      - nextcloud:file-manager
    restart: always
</code></pre>
<p><code>docker-compose up -d</code> 进行安装<br>
<img src="https://raw.githubusercontent.com/sjylawyer/pic_backup/master/img/20200223101203.png" alt="" loading="lazy"></p>
<p>输入[locallost:8000/ui][1]，打开ariang的下载页面进行设置，因为我们修改了默认的端口需要在<code>Ariang设置</code>里面将端口进行修改。</p>
<figure data-type="image" tabindex="2"><img src="https://raw.githubusercontent.com/sjylawyer/pic_backup/master/img/20200223101230.png" alt="" loading="lazy"></figure>
<p>但我们打开localhost:8000时，会显示<code>502 Bad Gateway</code> 的代码，是因为nextcloud安装过程中，安装的过程有些长，耐心等待下</p>
<figure data-type="image" tabindex="3"><img src="https://raw.githubusercontent.com/sjylawyer/pic_backup/master/img/20200223101505.png" alt="" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://raw.githubusercontent.com/sjylawyer/pic_backup/master/img/20200223101521.png" alt="" loading="lazy"></figure>
<p>完成后会有提示<br>
<img src="https://raw.githubusercontent.com/sjylawyer/pic_backup/master/img/20200223101538.png" alt="" loading="lazy"></p>
<p>之后打开本地页面，端口为8000<br>
<img src="https://raw.githubusercontent.com/sjylawyer/pic_backup/master/img/20200223101559.png" alt="" loading="lazy"></p>
<p>但是进入的时候发生了错误</p>
<figure data-type="image" tabindex="5"><img src="https://raw.githubusercontent.com/sjylawyer/pic_backup/master/img/20200223101613.png" alt="" loading="lazy"></figure>
<p>查找了资料后，进入该容器<br>
apt-get update<br>
apt-get install vim</p>
<p>只要在nextcloud目录下config/config.php文件中加入</p>
<pre><code>'check_data_directory_permissions' =&gt; false
</code></pre>
<figure data-type="image" tabindex="6"><img src="https://raw.githubusercontent.com/sjylawyer/pic_backup/master/img/20200223101638.png" alt="" loading="lazy"></figure>
<p>之后就可以正常访问了。</p>
<p>参考文献:[^docker-compose]:https://github.com/wahyd4/aria2-ariang-x-docker-compose</p>
<hr>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用valine+leancloud评论系统]]></title>
        <id>https://www.012368.xyz/cvQNPgRun/</id>
        <link href="https://www.012368.xyz/cvQNPgRun/">
        </link>
        <updated>2020-02-21T03:02:06.000Z</updated>
        <content type="html"><![CDATA[<p>打开<a href="leancloud.app/">leancloud官网</a>官网注册账号，并使用国际版的页面。<br>
之后创建一个应用<br>
<img src="https://raw.githubusercontent.com/sjylawyer/pic_backup/master/img/20200221104302.png" alt="" loading="lazy"><br>
进入应用后点击<code>设置</code>→<code>应用keys</code><br>
<img src="https://raw.githubusercontent.com/sjylawyer/pic_backup/master/img/20200221104446.png" alt="" loading="lazy"></p>
<p>将appid和appkey 粘贴到<code>Gridea</code>里面<br>
<img src="https://raw.githubusercontent.com/sjylawyer/pic_backup/master/img/20200221104658.png" alt="" loading="lazy"></p>
<p>点击安全中心将网站设置为安全域名</p>
<figure data-type="image" tabindex="1"><img src="https://raw.githubusercontent.com/sjylawyer/pic_backup/master/img/20200221104837.png" alt="" loading="lazy"></figure>
<p>需要等待三分钟后即可。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[用github搭建blog图床]]></title>
        <id>https://www.012368.xyz/rsqdo8nAA/</id>
        <link href="https://www.012368.xyz/rsqdo8nAA/">
        </link>
        <updated>2020-02-19T09:42:48.000Z</updated>
        <content type="html"><![CDATA[<p>又决定重新开启bolg了，已经记不清是多少次下的决定了。这次打算使用的是<code>Gridea</code>。但是面临的问题是如何选择图床，<code>七牛云</code>、<code>sm</code>图床甚至阿里云存储都考虑的下，都觉的好麻烦。或许早就过了折腾的年纪了。最终选择了github+picogo的方案。<br>
下载pico和安装并注册github就不介绍了。</p>
<ul>
<li>
<p>在github上创立新的仓库。<br>
<img src="https://raw.githubusercontent.com/sjylawyer/pic_backup/master/img/2020-02-19-17-27-04.png" alt="" loading="lazy"></p>
</li>
<li>
<p>依次进入<code>setting</code>→<code>Developer settings</code>→<code>Personal access tokens</code>创建一个token。</p>
</li>
</ul>
<figure data-type="image" tabindex="1"><img src="https://raw.githubusercontent.com/sjylawyer/pic_backup/master/img/2020-02-19-17-28-53.png" alt="" loading="lazy"></figure>
<ul>
<li>在picogo上进行设置</li>
</ul>
<figure data-type="image" tabindex="2"><img src="https://raw.githubusercontent.com/sjylawyer/pic_backup/master/img/2020-02-19-17-33-44.png" alt="" loading="lazy"></figure>
<ul>
<li>设置上传快捷键</li>
</ul>
<figure data-type="image" tabindex="3"><img src="https://raw.githubusercontent.com/sjylawyer/pic_backup/master/img/20200219174221.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于pt]]></title>
        <id>https://www.012368.xyz/guan-yu-pt/</id>
        <link href="https://www.012368.xyz/guan-yu-pt/">
        </link>
        <updated>2020-02-19T09:01:39.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="什么是pt">什么是Pt</h2>
<p>pt是「Private Tracker」的简称，不同与Bt它可以记录下每一个用户的详细资料。个人认为能够有效的避免了像迅雷这种疯狂吸血的行为，而且pt本身比较隐蔽，在版权方面引起的纠纷也相对较少。</p>
<p>正是因为pt的隐蔽性，大部分pt网站都采取了邀请的注册机制，对于一些大的网站需要老人的邀请才可以。像笔者这种新的用户，只能等待找一些网站使用，注册了一些网站暂时发现pt烧包稍微好些。</p>
<p>本人主要写对入门pt的一些注意事项。</p>
]]></summary>
        <content type="html"><![CDATA[<h2 id="什么是pt">什么是Pt</h2>
<p>pt是「Private Tracker」的简称，不同与Bt它可以记录下每一个用户的详细资料。个人认为能够有效的避免了像迅雷这种疯狂吸血的行为，而且pt本身比较隐蔽，在版权方面引起的纠纷也相对较少。</p>
<p>正是因为pt的隐蔽性，大部分pt网站都采取了邀请的注册机制，对于一些大的网站需要老人的邀请才可以。像笔者这种新的用户，只能等待找一些网站使用，注册了一些网站暂时发现pt烧包稍微好些。</p>
<p>本人主要写对入门pt的一些注意事项。</p>
<!-- more -->
<h2 id="关于软件">关于软件</h2>
<p>因为pt本身就是防止用户过分下载而拒接上传的自私行为，对于一些吸血的软件是命令禁止的，目前大部分pt网站建议使用的软件包括：</p>
<ul>
<li>qBittorrent</li>
<li>uTorrent</li>
<li>Transmission</li>
<li>Deluge<br>
当然家用nas可以通过docker安装其网页版进行下载。</li>
</ul>
<h2 id="关于下载">关于下载</h2>
<p>先说下pt网站的常用术语（依据刚毛橐吾的<a href="https://zhidao.baidu.com/question/332161977.html">回答</a>）<br>
*免费：不计下载流量，下载免费，上传100%，即用户下载不计算下载流量，上传计100%。：</p>
<ul>
<li>2x：上传流量算两倍，下载流量100%，例如用户上传1G算为2G，上传1G算为1G。</li>
<li>2xfree：上传流量算两倍，下载免费，例如用户上传1G计算为2G，下载不算流量。</li>
<li>2x50%：上传流量算两倍，下载算一半，例如用户上传1G计算为2G，下载1G计算为0.5G。</li>
<li>50%：上传流量算100%，下载流量算50%，例如用户上传1G计算为1G，下载1G计算为0.5G。</li>
</ul>
<p>也是是说在下载的过程中2xfree对新用户是最为友好的，也是新人更应该争取的。<br>
关于魔力值<br>
<img src="https://i.loli.net/2020/02/19/pxvqPgUH9rjtNGk.png" alt="2020-02-19-16-48-37.png" loading="lazy"><br>
<img src="./_image/2020-02-19-16-48-37.png" alt="" loading="lazy"></p>
<p>而魔力值最大的好处是可以兑换上传量，以获得分享率的提升。</p>
<!-- more -->
]]></content>
    </entry>
</feed>